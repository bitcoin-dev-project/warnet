name: test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  # ruff:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: chartboost/ruff-action@v1
  ruff-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
        with:
          args: 'format --check'
  build-image:
    # needs: [ruff, ruff-format]
    needs: [ruff-format]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          file: resources/images/rpc/Dockerfile_prod
          context: .
          tags: warnet/dev
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/warnet.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: warnet
          path: /tmp/warnet.tar
  test:
    needs: [build-image]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: [scenarios_test.py, rpc_test.py, graph_test.py, ln_test.py, dag_connection_test.py, logging_test.py]
    steps:
      - uses: actions/checkout@v4
      - uses: hynek/setup-cached-uv@v1
      - uses: azure/setup-helm@v4.2.0
      - uses: medyagh/setup-minikube@master
        with:
          mount-path: ${{ github.workspace }}:/mnt/src
      - uses: actions/download-artifact@v4
        with:
          name: warnet
          path: /tmp
      - run: |
          echo loading the image directly into minikube docker
          eval $(minikube -p minikube docker-env)
          docker load --input /tmp/warnet.tar
          docker image ls -a

          echo Installing warnet python package for cli
          uv venv
          uv pip install -e .

          echo "Contents of warnet-rpc-statefulset-dev.yaml being used:"
          cat resources/manifests/warnet-rpc-statefulset-dev.yaml

          echo Setting up k8s
          kubectl apply -f resources/manifests/namespace.yaml
          kubectl apply -f resources/manifests/rbac-config.yaml
          kubectl apply -f resources/manifests/warnet-rpc-service.yaml
          kubectl apply -f resources/manifests/warnet-rpc-statefulset-dev.yaml
          kubectl config set-context --current --namespace=warnet

          echo sleeping for 30s to give k8s time to boot
          sleep 30
          kubectl describe pod rpc-0
          kubectl logs rpc-0

          echo Waiting for rpc-0 to come online
          until kubectl get pod rpc-0 --namespace=warnet; do
             echo "Waiting for server to find pod rpc-0..."
             sleep 4
          done
          kubectl wait --for=condition=Ready --timeout=2m pod rpc-0
        shell: bash
      - run: |
          kubectl port-forward svc/rpc 9276:9276 &
      - name: Run tests
        run: |
          source .venv/bin/activate
          ./test/${{matrix.test}}
  # build-test:
  #   needs: [build-image]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/compose
  #     - run: ./test/build_branch_test.py compose
