# Setup deps stage
FROM alpine:3.7 AS deps
ENV REPO="bitcoin/bitcoin"
ENV COMMIT_SHA="dac5d68fc6cf136e0d7b21b9ed4fa053d54e6059"
ENV BUILD_ARGS="--disable-tests --without-gui --disable-bench --disable-fuzz-binary --enable-suppress-external-warnings"

RUN --mount=type=cache,target=/var/cache/apk \
    sed -i 's/http\:\/\/dl-cdn.alpinelinux.org/https\:\/\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories \
    && apk --no-cache add \
    autoconf \
    automake \
    boost-dev \
    build-base \
    chrpath \
    file \
    gnupg \
    git \
    libevent-dev \
    libressl \
    libressl-dev \
    libtool \
    linux-headers \
    protobuf-dev \
    zeromq-dev

COPY isroutable_v0.16.1.patch /tmp/isroutable.patch
COPY addrman_v0.16.1.patch /tmp/addrman.patch

RUN sed -i 's/http\:\/\/dl-cdn.alpinelinux.org/https\:\/\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories
RUN apk --no-cache add autoconf
RUN apk --no-cache add automake
RUN apk --no-cache add build-base
RUN apk --no-cache add libressl

ENV BERKELEYDB_VERSION=db-4.8.30.NC
ENV BERKELEYDB_PREFIX=/opt/${BERKELEYDB_VERSION}

RUN wget https://download.oracle.com/berkeley-db/${BERKELEYDB_VERSION}.tar.gz
RUN tar -xzf *.tar.gz
RUN sed s/__atomic_compare_exchange/__atomic_compare_exchange_db/g -i ${BERKELEYDB_VERSION}/dbinc/atomic.h
RUN mkdir -p ${BERKELEYDB_PREFIX}

WORKDIR /${BERKELEYDB_VERSION}/build_unix

RUN ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${BERKELEYDB_PREFIX}
RUN make -j$(nproc)
RUN make install
RUN rm -rf ${BERKELEYDB_PREFIX}/docs

# Clone and patch and build stage
FROM deps AS build
COPY --from=deps /opt /opt
ENV BITCOIN_PREFIX=/opt/bitcoin
WORKDIR /build

RUN set -ex \
    && cd /build \
    && git clone --depth 1 "https://github.com/${REPO}" \
    && cd bitcoin \
    && git fetch --depth 1 origin "$COMMIT_SHA" \
    && git checkout "$COMMIT_SHA" \
    && sed -i '/AC_PREREQ/a\AR_FLAGS=cr' src/univalue/configure.ac \
    && sed -i '/AX_PROG_CC_FOR_BUILD/a\AR_FLAGS=cr' src/secp256k1/configure.ac \
    && sed -i s:sys/fcntl.h:fcntl.h: src/compat.h \
    && git apply /tmp/isroutable.patch \
    && git apply /tmp/addrman.patch \
    && ./autogen.sh \
    && ./configure \
    LDFLAGS=-L`ls -d /opt/db*`/lib/ \
    CPPFLAGS="-g0 -I`ls -d /opt/db*`/include/ --param ggc-min-expand=1 --param ggc-min-heapsize=32768" \
    --prefix=${BITCOIN_PREFIX} \
    ${BUILD_ARGS} \
    --with-daemon \
    && make -j$(nproc) \
    && make install \
    && strip ${BITCOIN_PREFIX}/bin/bitcoin-cli \
    && strip ${BITCOIN_PREFIX}/bin/bitcoind \
    && rm -f ${BITCOIN_PREFIX}/lib/libbitcoinconsensus.a \
    && rm -f ${BITCOIN_PREFIX}/lib/libbitcoinconsensus.so.0.0.0 \
    && rm ${BITCOIN_PREFIX}/bin/bitcoin-tx

# Final clean stage
FROM alpine:3.7
ARG UID=100
ARG GID=101
ENV BITCOIN_ARGS="-printtoconsole"
ENV BITCOIN_DATA=/root/.bitcoin
ENV BITCOIN_PREFIX=/opt/bitcoin
ENV PATH=${BITCOIN_PREFIX}/bin:$PATH
LABEL maintainer.0="bitcoindevproject"

RUN addgroup -g ${GID} -S bitcoin
RUN adduser -u ${UID} -S bitcoin -G bitcoin
RUN --mount=type=cache,target=/var/cache/apk sed -i 's/http\:\/\/dl-cdn.alpinelinux.org/https\:\/\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories \
    && apk --no-cache add \
    bash \
    boost \
    boost-program_options \
    libevent \
    libressl \
    libzmq \
    shadow \
    su-exec

COPY --from=build /opt/bitcoin /usr/local
COPY entrypoint_0.16.1.sh /entrypoint.sh

VOLUME ["/home/bitcoin/.bitcoin"]
EXPOSE 8332 8333 18332 18333 18443 18444 38333 38332

ENTRYPOINT ["/entrypoint.sh"]
CMD ["bitcoind"]

