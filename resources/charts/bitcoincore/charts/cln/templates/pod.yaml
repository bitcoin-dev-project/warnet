apiVersion: v1
kind: Pod
metadata:
  name: {{ include "cln.fullname" . }}
  labels:
    {{- include "cln.labels" . | nindent 4 }}
    {{- with .Values.podLabels }}
        {{- toYaml . | nindent 4 }}
    {{- end }}
    app: {{ include "cln.fullname" . }}
    {{- if .Values.collectLogs }}
    collect_logs: "true"
    {{- end }}
    chain: {{ .Values.global.chain }}
  annotations:
    kubectl.kubernetes.io/default-container: "cln"
spec:
  {{- with .Values.imagePullSecrets }}
  imagePullSecrets:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  securityContext:
    {{- toYaml .Values.podSecurityContext | nindent 4 }}
  containers:
    - name: {{ .Chart.Name }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
      imagePullPolicy: {{ .Values.image.pullPolicy }}
      ports:
        - name: p2p
          containerPort: {{ .Values.P2PPort }}
          protocol: TCP
        - name: rpc
          containerPort: {{ .Values.RPCPort }}
          protocol: TCP
        - name: rest
          containerPort: {{ .Values.RestPort }}
          protocol: TCP
      command:
        - /bin/sh
        - -c
        - lightningd --conf=/root/.lightning/config
      livenessProbe:
        {{- toYaml .Values.livenessProbe | nindent 8 }}
      readinessProbe:
        {{- toYaml .Values.readinessProbe | nindent 8 }}
      startupProbe:
        {{- toYaml .Values.startupProbe | nindent 8 }}
      resources:
        {{- toYaml .Values.resources | nindent 8 }}
      volumeMounts:
        {{- with .Values.volumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - mountPath: /root/.lightning/config
          name: config
          subPath: config
    {{- with .Values.extraContainers }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    - name: http-server
      image: busybox
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo "Starting HTTP server..."
          busybox httpd -f -p 8080 -h /working
      ports:
        - containerPort: 8080
          name: http
      volumeMounts:
        {{- with .Values.volumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
  volumes:
    {{- with .Values.volumes }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    - configMap:
        name: {{ include "cln.fullname" . }}
      name: config
  {{- with .Values.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.tolerations }}
  tolerations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
